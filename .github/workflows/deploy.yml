# name: Build and Deploy App

# on:
#   push:
#     branches: [ "main" ]

# jobs:
#   sonar:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3

#       - name: SonarQube Scan
#         uses: SonarSource/sonarqube-scan-action@master
#         with:
#           args: >
#             -Dsonar.projectKey=So-fire_three_tier_with_sonarcube_redo 
#             -Dsonar.organization=so-fire
#         env:
#           SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

#   build_push:
#     needs: sonar
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3

#       - name: Log in to DockerHub
#         run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

#       - name: Set DockerHub Username as Environment Variable
#         run: echo "DOCKERHUB_USERNAME=${{ secrets.DOCKERHUB_USERNAME }}" >> $GITHUB_ENV

#       - name: Build and Push via Docker Compose
#         run: docker compose build && docker compose push

#   deploy_to_ec2:
#     needs: build_push
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3

#       - name: Copy project files to EC2 (via SCP)
#         uses: appleboy/scp-action@master
#         with:
#           host: ${{ secrets.EC2_HOST }}
#           username: ubuntu
#           key: ${{ secrets.EC2_SSH_KEY }}
#           source: "./docker-compose.yml,./.env,./application-code"
#           target: "/home/ubuntu/fintech-app"

#       - name: Deploy app on EC2 (via SSH)
#         uses: appleboy/ssh-action@master
#         with:
#           host: ${{ secrets.EC2_HOST }}
#           username: ubuntu
#           key: ${{ secrets.EC2_SSH_KEY }}
#           script: |
#             # Install Docker and Docker Compose if not already installed
#             sudo apt-get update -y
#             sudo apt-get install -y \
#               ca-certificates \
#               curl \
#               gnupg \
#               lsb-release

#             sudo mkdir -p /etc/apt/keyrings
#             curl -fsSL https://download.docker.com/linux/ubuntu/gpg | \
#               sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg

#             echo \
#               "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
#               $(lsb_release -cs) stable" | \
#               sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

#             sudo apt-get update -y
#             sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin

#             # Enable docker without sudo
#             sudo usermod -aG docker ubuntu
#             newgrp docker

#             # Grant Docker permissions and reload shell
#             sudo chown $USER /var/run/docker.sock

#             # Navigate to app folder and run the containers
#             cd /home/ubuntu/fintech-app
#             docker compose pull
#             docker compose down
#             docker compose up -d --remove-orphans








name: Build and Deploy App

on:
  push:
    branches: [ "main" ]

jobs:
  sonar:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@master
        with:
          args: >
            -Dsonar.projectKey=So-fire_three_tier_with_sonarcube_redo 
            -Dsonar.organization=so-fire
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  build_push:
    needs: sonar
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to DockerHub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Set DockerHub Username as Environment Variable
        run: echo "DOCKERHUB_USERNAME=${{ secrets.DOCKERHUB_USERNAME }}" >> $GITHUB_ENV

      - name: Build and Push via Docker Compose
        run: docker compose build && docker compose push

  deploy_to_ec2:
    needs: build_push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Copy project files to EC2 (via SCP)
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user   # ✅ Correct user
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "./docker-compose.yml,./.env,./application-code"
          target: "/home/ec2-user/fintech-app"   # ✅ Match user home

      - name: Deploy app on EC2 (via SSH)
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user   # ✅ Correct user
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Update packages
            sudo dnf update -y

            # Install Docker if not installed
            if ! command -v docker &>























# name: Build and Deploy App

# on:
#   push:
#     branches: [ "main" ]

# jobs:
#   sonar:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3

#       - name: SonarQube Scan
#         uses: SonarSource/sonarqube-scan-action@master
#         with:
#           args: >
#             -Dsonar.projectKey=So-fire_three_tier_with_sonarcube  
#             -Dsonar.organization=so-fire
#           #ALWAYS MAKE SURE YOU INPUT YOUR SONARCUBE PROJECT NAME AND ORG IN TE TWO CODES ABOVE # 
#         env:
#           SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

#   build_push:
#     needs: sonar
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3

#       - name: Log in to DockerHub
#         run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

#       - name: Set DockerHub Username as Environment Variable
#         run: echo "DOCKERHUB_USERNAME=${{ secrets.DOCKERHUB_USERNAME }}" >> $GITHUB_ENV

#       - name: Build and Push via Docker Compose
#         run: docker compose build && docker compose push

      
#   deploy_to_ec2:
#     needs: build_push
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3

#       - name: Copy project files to EC2 (via SCP)
#         uses: appleboy/scp-action@master
#         with:
#           host: ${{ secrets.EC2_HOST }}
#           username: ubuntu
#           key: ${{ secrets.EC2_SSH_KEY }}
#           source: "./docker-compose.yml,./.env,./application-code"
#           target: "/home/ubuntu/fintech-app"

#       - name: Deploy app on EC2 (via SSH)
#         uses: appleboy/ssh-action@master
#         with:
#           host: ${{ secrets.EC2_HOST }}
#           username: ubuntu
#           key: ${{ secrets.EC2_SSH_KEY }}
#           script: |
#           # Install Docker and Docker Compose if not already installed
#             sudo apt-get update -y
#             sudo apt-get install -y \
#               ca-certificates \
#               curl \
#               gnupg \
#               lsb-release

#             sudo mkdir -p /etc/apt/keyrings
#             curl -fsSL https://download.docker.com/linux/ubuntu/gpg | \
#               sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg

#             echo \
#               "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
#               $(lsb_release -cs) stable" | \
#               sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

#             sudo apt-get update -y
#             sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin

#            # Enable docker without sudo
#             sudo usermod -aG docker ubuntu
#             newgrp docker

#           # # Install Docker and Docker Compose if not present
#             # if ! command -v docker &> /dev/null; then
#             #   echo "Docker not found. Installing..."
#             #   sudo apt-get update
#             #   sudo apt-get install -y ca-certificates curl gnupg lsb-release
#             #   sudo mkdir -p /etc/apt/keyrings
#             #   curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
#             #   echo \
#             #     "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
#             #     $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
#             #   sudo apt-get update
#             #   sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin
#             #   sudo usermod -aG docker ubuntu
#             #   newgrp docker
#             # else
#             #   echo "Docker already installed."
#             # fi

#             # Grant Docker permissions and reload shell
#             sudo usermod -aG docker ubuntu
#             sudo chown $USER /var/run/docker.sock

#             # Navigate to app folder and run the containers
#             cd /home/ubuntu/fintech-app
#             docker compose pull
#             docker compose down
#             docker compose up -d --remove-orphans
            